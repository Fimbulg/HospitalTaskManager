// <auto-generated />
using System;
using HospitalTaskManagerWebAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HospitalTaskManagerWebAPI.Migrations
{
    [DbContext(typeof(HospitalTaskManagerContext))]
    partial class HospitalTaskManagerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HospitalTaskManagerWebAPI.Models.AccessLog", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CheckInTime");

                    b.Property<DateTime>("CheckOutTime");

                    b.Property<string>("Department");

                    b.Property<bool>("OnSite");

                    b.Property<int>("StaffID");

                    b.HasKey("ID");

                    b.ToTable("AccessLog");
                });

            modelBuilder.Entity("HospitalTaskManagerWebAPI.Models.Procedure", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Department");

                    b.Property<DateTime>("EndTime");

                    b.Property<string>("ProcedureType");

                    b.Property<DateTime>("StartTime");

                    b.HasKey("ID");

                    b.ToTable("Procedure");
                });

            modelBuilder.Entity("HospitalTaskManagerWebAPI.Models.Schedule", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndTime");

                    b.Property<int>("StaffID");

                    b.Property<DateTime>("StartTime");

                    b.HasKey("ID");

                    b.ToTable("Schedule");
                });

            modelBuilder.Entity("HospitalTaskManagerWebAPI.Models.Staff", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("ID");

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("HospitalTaskManagerWebAPI.Models.StaffProcedure", b =>
                {
                    b.Property<int>("StaffID");

                    b.Property<int>("ProcedureID");

                    b.HasKey("StaffID", "ProcedureID");

                    b.HasIndex("ProcedureID");

                    b.ToTable("StaffProcedure");
                });

            modelBuilder.Entity("HospitalTaskManagerWebAPI.Models.StaffProcedure", b =>
                {
                    b.HasOne("HospitalTaskManagerWebAPI.Models.Procedure", "Procedure")
                        .WithMany("StaffProcedures")
                        .HasForeignKey("ProcedureID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HospitalTaskManagerWebAPI.Models.Staff", "Staff")
                        .WithMany("StaffProcedures")
                        .HasForeignKey("StaffID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
